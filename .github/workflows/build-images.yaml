name: Build Images

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main"]
    tags: ["v*"]

env:
  IMAGE_PREFIX: ghcr.io/kilip/reboot
  API_DOCKER_IMAGE: ghcr.io/kilip/reboot-api:${{ github.sha }}
  PWA_DOCKER_IMAGE: ghcr.io/kilip/reboot-pwa:${{ github.sha }}
jobs:
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/bake-action@v5
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.prod.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max

      - name: GHCR login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup build tags
        id: tag
        run: |
          date_tag=$(date +'%Y%m%d%H%M%S')
          API_IMAGE=${IMAGE_PREFIX}-api
          PWA_IMAGE=${IMAGE_PREFIX}-pwa

          echo "API_DATE=${API_IMAGE}:main-${date_tag}" >> "$GITHUB_OUTPUT"
          echo "PWA_DATE=${PWA_IMAGE}:main-${date_tag}" >> "$GITHUB_OUTPUT"

          echo "API_LATEST=${API_IMAGE}:latest" >> "$GITHUB_OUTPUT"
          echo "PWA_LATEST=${PWA_IMAGE}:latest" >> "$GITHUB_OUTPUT"

          echo "API_REF=${API_IMAGE}:${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          echo "PWA_REF=${PWA_IMAGE}:${{ github.ref_name }}" >> "$GITHUB_OUTPUT"

      - name: docker push sha tag
        run: |
          docker push $API_DOCKER_IMAGE
          docker push $PWA_DOCKER_IMAGE

      - name: push ref name tag
        run: |
          docker tag $API_DOCKER_IMAGE ${{ steps.tag.outputs.API_REF }}
          docker push ${{ steps.tag.outputs.API_REF }}

          docker tag $PWA_DOCKER_IMAGE ${{ steps.tag.outputs.PWA_REF }}
          docker push ${{ steps.tag.outputs.PWA_REF }}

      - name: push timestamp image
        if: github.ref_name == 'main'
        run: |
          docker tag $API_DOCKER_IMAGE ${{ steps.tag.outputs.API_DATE }}
          docker push ${{ steps.tag.outputs.API_DATE }}

          docker tag $PWA_DOCKER_IMAGE ${{ steps.tag.outputs.PWA_DATE }}
          docker push ${{ steps.tag.outputs.PWA_DATE }}

      - name: push latest image
        if: github.ref_name != 'main'
        run: |
          docker tag $API_DOCKER_IMAGE ${{ steps.tag.outputs.API_LATEST }}
          docker push ${{ steps.tag.outputs.API_LATEST }}

          docker tag $PWA_DOCKER_IMAGE ${{ steps.tag.outputs.PWA_LATEST}}
          docker push ${{ steps.tag.outputs.PWA_LATEST }}
